// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { AbiParameterToPrimitiveType, GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface ROFLSwapTester$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "ROFLSwapTester",
  "sourceName": "contracts/ROFLSwapTester.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_roflSwapV2",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "checkUserHasOrders",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        }
      ],
      "name": "getEncryptedOrder",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyOrdersFromRoflSwap",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        }
      ],
      "name": "getOrderOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserOrders",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encryptedOrder",
          "type": "bytes"
        }
      ],
      "name": "placeTestOrder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roflSwap",
      "outputs": [
        {
          "internalType": "contract ROFLSwapV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604051610ed9380380610ed9833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610dc2806101176000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638cf53d971161005b5780638cf53d97146100ee578063bdf1f2f91461011e578063cc0fb62b1461014e578063da43338f1461017e5761007d565b80632c52a60e14610082578063449cad14146100a057806363c69f08146100be575b600080fd5b61008a61019c565b6040516100979190610657565b60405180910390f35b6100a8610237565b6040516100b59190610694565b60405180910390f35b6100d860048036038101906100d39190610721565b6102ce565b6040516100e59190610657565b60405180910390f35b6101086004803603810190610103919061077a565b610376565b60405161011591906107b6565b60405180910390f35b6101386004803603810190610133919061077a565b61041a565b6040516101459190610861565b60405180910390f35b610168600480360381019061016391906108e8565b6104c2565b6040516101759190610944565b60405180910390f35b61018661056b565b60405161019391906109be565b60405180910390f35b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bab5933a6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610209573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102329190610b2c565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ec265126040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c99190610ba1565b905090565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166363c69f08836040518263ffffffff1660e01b815260040161032991906107b6565b600060405180830381865afa158015610346573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061036f9190610b2c565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638cf53d97836040518263ffffffff1660e01b81526004016103d29190610944565b602060405180830381865afa1580156103ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104139190610be3565b9050919050565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdf1f2f9836040518263ffffffff1660e01b81526004016104759190610944565b600060405180830381865afa158015610492573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104bb9190610cb6565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3dd4e1384846040518363ffffffff1660e01b8152600401610520929190610d3b565b6020604051808303816000875af115801561053f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105639190610d5f565b905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6105ce816105bb565b82525050565b60006105e083836105c5565b60208301905092915050565b6000602082019050919050565b60006106048261058f565b61060e818561059a565b9350610619836105ab565b8060005b8381101561064a57815161063188826105d4565b975061063c836105ec565b92505060018101905061061d565b5085935050505092915050565b6000602082019050818103600083015261067181846105f9565b905092915050565b60008115159050919050565b61068e81610679565b82525050565b60006020820190506106a96000830184610685565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106ee826106c3565b9050919050565b6106fe816106e3565b811461070957600080fd5b50565b60008135905061071b816106f5565b92915050565b600060208284031215610737576107366106b9565b5b60006107458482850161070c565b91505092915050565b610757816105bb565b811461076257600080fd5b50565b6000813590506107748161074e565b92915050565b6000602082840312156107905761078f6106b9565b5b600061079e84828501610765565b91505092915050565b6107b0816106e3565b82525050565b60006020820190506107cb60008301846107a7565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561080b5780820151818401526020810190506107f0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610833826107d1565b61083d81856107dc565b935061084d8185602086016107ed565b61085681610817565b840191505092915050565b6000602082019050818103600083015261087b8184610828565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126108a8576108a7610883565b5b8235905067ffffffffffffffff8111156108c5576108c4610888565b5b6020830191508360018202830111156108e1576108e061088d565b5b9250929050565b600080602083850312156108ff576108fe6106b9565b5b600083013567ffffffffffffffff81111561091d5761091c6106be565b5b61092985828601610892565b92509250509250929050565b61093e816105bb565b82525050565b60006020820190506109596000830184610935565b92915050565b6000819050919050565b600061098461097f61097a846106c3565b61095f565b6106c3565b9050919050565b600061099682610969565b9050919050565b60006109a88261098b565b9050919050565b6109b88161099d565b82525050565b60006020820190506109d360008301846109af565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a1182610817565b810181811067ffffffffffffffff82111715610a3057610a2f6109d9565b5b80604052505050565b6000610a436106af565b9050610a4f8282610a08565b919050565b600067ffffffffffffffff821115610a6f57610a6e6109d9565b5b602082029050602081019050919050565b600081519050610a8f8161074e565b92915050565b6000610aa8610aa384610a54565b610a39565b90508083825260208201905060208402830185811115610acb57610aca61088d565b5b835b81811015610af45780610ae08882610a80565b845260208401935050602081019050610acd565b5050509392505050565b600082601f830112610b1357610b12610883565b5b8151610b23848260208601610a95565b91505092915050565b600060208284031215610b4257610b416106b9565b5b600082015167ffffffffffffffff811115610b6057610b5f6106be565b5b610b6c84828501610afe565b91505092915050565b610b7e81610679565b8114610b8957600080fd5b50565b600081519050610b9b81610b75565b92915050565b600060208284031215610bb757610bb66106b9565b5b6000610bc584828501610b8c565b91505092915050565b600081519050610bdd816106f5565b92915050565b600060208284031215610bf957610bf86106b9565b5b6000610c0784828501610bce565b91505092915050565b600080fd5b600067ffffffffffffffff821115610c3057610c2f6109d9565b5b610c3982610817565b9050602081019050919050565b6000610c59610c5484610c15565b610a39565b905082815260208101848484011115610c7557610c74610c10565b5b610c808482856107ed565b509392505050565b600082601f830112610c9d57610c9c610883565b5b8151610cad848260208601610c46565b91505092915050565b600060208284031215610ccc57610ccb6106b9565b5b600082015167ffffffffffffffff811115610cea57610ce96106be565b5b610cf684828501610c88565b91505092915050565b82818337600083830152505050565b6000610d1a83856107dc565b9350610d27838584610cff565b610d3083610817565b840190509392505050565b60006020820190508181036000830152610d56818486610d0e565b90509392505050565b600060208284031215610d7557610d746106b9565b5b6000610d8384828501610a80565b9150509291505056fea26469706673582212203e8892bf1eff067f921bf07381b4db1cdc7bdd8e6919d75aafdffbe0632ef7c664736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638cf53d971161005b5780638cf53d97146100ee578063bdf1f2f91461011e578063cc0fb62b1461014e578063da43338f1461017e5761007d565b80632c52a60e14610082578063449cad14146100a057806363c69f08146100be575b600080fd5b61008a61019c565b6040516100979190610657565b60405180910390f35b6100a8610237565b6040516100b59190610694565b60405180910390f35b6100d860048036038101906100d39190610721565b6102ce565b6040516100e59190610657565b60405180910390f35b6101086004803603810190610103919061077a565b610376565b60405161011591906107b6565b60405180910390f35b6101386004803603810190610133919061077a565b61041a565b6040516101459190610861565b60405180910390f35b610168600480360381019061016391906108e8565b6104c2565b6040516101759190610944565b60405180910390f35b61018661056b565b60405161019391906109be565b60405180910390f35b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bab5933a6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610209573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102329190610b2c565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ec265126040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c99190610ba1565b905090565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166363c69f08836040518263ffffffff1660e01b815260040161032991906107b6565b600060405180830381865afa158015610346573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061036f9190610b2c565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638cf53d97836040518263ffffffff1660e01b81526004016103d29190610944565b602060405180830381865afa1580156103ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104139190610be3565b9050919050565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdf1f2f9836040518263ffffffff1660e01b81526004016104759190610944565b600060405180830381865afa158015610492573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104bb9190610cb6565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3dd4e1384846040518363ffffffff1660e01b8152600401610520929190610d3b565b6020604051808303816000875af115801561053f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105639190610d5f565b905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6105ce816105bb565b82525050565b60006105e083836105c5565b60208301905092915050565b6000602082019050919050565b60006106048261058f565b61060e818561059a565b9350610619836105ab565b8060005b8381101561064a57815161063188826105d4565b975061063c836105ec565b92505060018101905061061d565b5085935050505092915050565b6000602082019050818103600083015261067181846105f9565b905092915050565b60008115159050919050565b61068e81610679565b82525050565b60006020820190506106a96000830184610685565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106ee826106c3565b9050919050565b6106fe816106e3565b811461070957600080fd5b50565b60008135905061071b816106f5565b92915050565b600060208284031215610737576107366106b9565b5b60006107458482850161070c565b91505092915050565b610757816105bb565b811461076257600080fd5b50565b6000813590506107748161074e565b92915050565b6000602082840312156107905761078f6106b9565b5b600061079e84828501610765565b91505092915050565b6107b0816106e3565b82525050565b60006020820190506107cb60008301846107a7565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561080b5780820151818401526020810190506107f0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610833826107d1565b61083d81856107dc565b935061084d8185602086016107ed565b61085681610817565b840191505092915050565b6000602082019050818103600083015261087b8184610828565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126108a8576108a7610883565b5b8235905067ffffffffffffffff8111156108c5576108c4610888565b5b6020830191508360018202830111156108e1576108e061088d565b5b9250929050565b600080602083850312156108ff576108fe6106b9565b5b600083013567ffffffffffffffff81111561091d5761091c6106be565b5b61092985828601610892565b92509250509250929050565b61093e816105bb565b82525050565b60006020820190506109596000830184610935565b92915050565b6000819050919050565b600061098461097f61097a846106c3565b61095f565b6106c3565b9050919050565b600061099682610969565b9050919050565b60006109a88261098b565b9050919050565b6109b88161099d565b82525050565b60006020820190506109d360008301846109af565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a1182610817565b810181811067ffffffffffffffff82111715610a3057610a2f6109d9565b5b80604052505050565b6000610a436106af565b9050610a4f8282610a08565b919050565b600067ffffffffffffffff821115610a6f57610a6e6109d9565b5b602082029050602081019050919050565b600081519050610a8f8161074e565b92915050565b6000610aa8610aa384610a54565b610a39565b90508083825260208201905060208402830185811115610acb57610aca61088d565b5b835b81811015610af45780610ae08882610a80565b845260208401935050602081019050610acd565b5050509392505050565b600082601f830112610b1357610b12610883565b5b8151610b23848260208601610a95565b91505092915050565b600060208284031215610b4257610b416106b9565b5b600082015167ffffffffffffffff811115610b6057610b5f6106be565b5b610b6c84828501610afe565b91505092915050565b610b7e81610679565b8114610b8957600080fd5b50565b600081519050610b9b81610b75565b92915050565b600060208284031215610bb757610bb66106b9565b5b6000610bc584828501610b8c565b91505092915050565b600081519050610bdd816106f5565b92915050565b600060208284031215610bf957610bf86106b9565b5b6000610c0784828501610bce565b91505092915050565b600080fd5b600067ffffffffffffffff821115610c3057610c2f6109d9565b5b610c3982610817565b9050602081019050919050565b6000610c59610c5484610c15565b610a39565b905082815260208101848484011115610c7557610c74610c10565b5b610c808482856107ed565b509392505050565b600082601f830112610c9d57610c9c610883565b5b8151610cad848260208601610c46565b91505092915050565b600060208284031215610ccc57610ccb6106b9565b5b600082015167ffffffffffffffff811115610cea57610ce96106be565b5b610cf684828501610c88565b91505092915050565b82818337600083830152505050565b6000610d1a83856107dc565b9350610d27838584610cff565b610d3083610817565b840190509392505050565b60006020820190508181036000830152610d56818486610d0e565b90509392505050565b600060208284031215610d7557610d746106b9565b5b6000610d8384828501610a80565b9150509291505056fea26469706673582212203e8892bf1eff067f921bf07381b4db1cdc7bdd8e6919d75aafdffbe0632ef7c664736f6c634300081c0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "ROFLSwapTester",
    constructorArgs: [_roflSwapV2: AbiParameterToPrimitiveType<{"name":"_roflSwapV2","type":"address"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<ROFLSwapTester$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/ROFLSwapTester.sol:ROFLSwapTester",
    constructorArgs: [_roflSwapV2: AbiParameterToPrimitiveType<{"name":"_roflSwapV2","type":"address"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<ROFLSwapTester$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "ROFLSwapTester",
    constructorArgs: [_roflSwapV2: AbiParameterToPrimitiveType<{"name":"_roflSwapV2","type":"address"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<ROFLSwapTester$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/ROFLSwapTester.sol:ROFLSwapTester",
    constructorArgs: [_roflSwapV2: AbiParameterToPrimitiveType<{"name":"_roflSwapV2","type":"address"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<ROFLSwapTester$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "ROFLSwapTester",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<ROFLSwapTester$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/ROFLSwapTester.sol:ROFLSwapTester",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<ROFLSwapTester$Type["abi"]>>;
}
