// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface Subcall$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "Subcall",
  "sourceName": "@oasisprotocol/sapphire-contracts/contracts/Subcall.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "status",
          "type": "uint64"
        },
        {
          "internalType": "string",
          "name": "data",
          "type": "string"
        }
      ],
      "name": "AccountsTransferError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "status",
          "type": "uint64"
        },
        {
          "internalType": "string",
          "name": "data",
          "type": "string"
        }
      ],
      "name": "ConsensusDelegateError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "status",
          "type": "uint64"
        },
        {
          "internalType": "string",
          "name": "data",
          "type": "string"
        }
      ],
      "name": "ConsensusTakeReceiptError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "status",
          "type": "uint64"
        },
        {
          "internalType": "string",
          "name": "data",
          "type": "string"
        }
      ],
      "name": "ConsensusUndelegateError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "status",
          "type": "uint64"
        },
        {
          "internalType": "string",
          "name": "data",
          "type": "string"
        }
      ],
      "name": "ConsensusWithdrawError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "CoreCallDataPublicKeyError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "CoreCurrentEpochError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncompleteParse",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidReceiptId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MissingKey",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "receiptId",
          "type": "uint64"
        }
      ],
      "name": "ParseReceiptError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RoflOriginNotAuthorizedForApp",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SubcallError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "receiptKind",
          "type": "uint256"
        }
      ],
      "name": "TakeReceiptKindOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TokenNameTooLong",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WrongMapSizeError",
      "type": "error"
    }
  ],
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220085ea9bec31b7e5d5aac473f137cf38c330a065c10d9401dfcb722ade7f9325d64736f6c634300081c0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220085ea9bec31b7e5d5aac473f137cf38c330a065c10d9401dfcb722ade7f9325d64736f6c634300081c0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "Subcall",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<Subcall$Type["abi"]>>;
  export function deployContract(
    contractName: "@oasisprotocol/sapphire-contracts/contracts/Subcall.sol:Subcall",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<Subcall$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "Subcall",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<Subcall$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "@oasisprotocol/sapphire-contracts/contracts/Subcall.sol:Subcall",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<Subcall$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "Subcall",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<Subcall$Type["abi"]>>;
  export function getContractAt(
    contractName: "@oasisprotocol/sapphire-contracts/contracts/Subcall.sol:Subcall",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<Subcall$Type["abi"]>>;
}
